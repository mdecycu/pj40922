<h1>About</h1>
<p>有限元素法在四足機器人設計上的應用</p>
<p>Application of Finite Element Method to Quadruped Robot Design</p>
<p><a href="https://github.com/mdecycu/pj40922">https://github.com/mdecycu/pj40922</a></p>
<p><a href="https://mdecycu.github.io/pj40922">https://mdecycu.github.io/pj40922</a></p>
<hr/>
<p><a href="https://github.com/NGSolve/ngsolve">https://github.com/NGSolve/ngsolve</a> </p>
<p><a href="https://www.math.uzh.ch/compmath/fileadmin/user/stas/compmath/Abschlussarbeiten/Arnold_Noam/myManual.pdf">https://www.math.uzh.ch/compmath/fileadmin/user/stas/compmath/Abschlussarbeiten/Arnold_Noam/myManual.pdf</a> </p>
<p><a href="https://www.asc.tuwien.ac.at/~lehrenfeld/Talks/Vancouver_Session1.pdf">https://www.asc.tuwien.ac.at/~lehrenfeld/Talks/Vancouver_Session1.pdf</a> </p>
<p><a href="https://www.asc.tuwien.ac.at/~schoeberl/wiki/talks/ng_oslo.pdf">https://www.asc.tuwien.ac.at/~schoeberl/wiki/talks/ng_oslo.pdf</a> </p>
<p><a href="https://www.researchgate.net/publication/266797024_C11_Implementation_of_Finite_Elements_in_NGSolve">https://www.researchgate.net/publication/266797024_C11_Implementation_of_Finite_Elements_in_NGSolve</a> </p>
<p><a href="https://guriang.unpad.ac.id/workshop/slides/fem.pdf">https://guriang.unpad.ac.id/workshop/slides/fem.pdf</a> </p>
<p><a href="https://buildmedia.readthedocs.org/media/pdf/ngs-py/latest/ngs-py.pdf">https://buildmedia.readthedocs.org/media/pdf/ngs-py/latest/ngs-py.pdf</a> </p>
<p>專題成員:</p>
<p style="padding-left: 30px;">40923231</p>
<p style="padding-left: 30px;">40923233</p>
<p style="padding-left: 30px;">40923235</p>
<p style="padding-left: 30px;">40923240</p><h1>Project</h1>
<p><a href="https://github.com/SJ-YI/PADWQ_open_source">https://github.com/SJ-YI/PADWQ_open_source</a></p>
<p><a href="/downloads/PADWQ_open_source-main.zip">PADWQ_open_source-main.zip</a></p>
<p>ㄐ<img caption="false" height="524" src="/images/PADWQ_robot_dog.PNG" width="600"/></p>
<h2>結構分析</h2>
<p>比較好的做法是將 pdf 檔案送到 one drive 然後只允許 @nfu 用戶下載</p>
<p>原因: 避免某些檔案僅允許特定使用者下載使用, 而非所有 WWW 用戶.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EfcIu87y20tChRfj8zBqOpoBwWsybjxU7CEn0vWbH-gP4w?e=BZX796">Structural Design, Simulation and Experiment of Quadruped Robot .pdf</a></p>
<p><a href="/downloads/sine-cosine-algorithm-for-solving-optimizations-with-constraints.pdf">sine-cosine-algorithm-for-solving-optimizations-with-constraints.pdf</a></p>
<p>2006</p>
<p style="padding-left: 30px;"><a href="/downloads/一种四足步行机器人结构设计与分析.pdf">一种四足步行机器人结构设计与分析.pdf</a> (雙自由度平面並聯五連桿設計)</p>
<p style="padding-left: 60px;">建立運動模型</p>
<p style="padding-left: 60px;">正運動學分析</p>
<p style="padding-left: 90px;">位置分析</p>
<p style="padding-left: 90px;">速度分析</p>
<p style="padding-left: 90px;">加速度分析</p>
<p style="padding-left: 60px;">逆運動學分析</p>
<p style="padding-left: 90px;">位置分析</p>
<p style="padding-left: 90px;">速度分析</p>
<p style="padding-left: 90px;">加速度分析</p>
<p style="padding-left: 60px;">輸出軌跡規劃</p>
<p style="padding-left: 60px;">建立步行機構模型</p>
<p style="padding-left: 60px;">整體結構設計</p>
<p>2009:</p>
<p style="padding-left: 30px;"><a href="/downloads/應用於非連續河石地形四足機器人的創新設計與實作.pdf">應用於非連續河石地形四足機器人的創新設計與實作.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/仿生四足機器人跨越河石地形的自適性模糊-類神經.PDF">仿生四足機器人跨越河石地形的自適性模糊-類神經.PDF</a></p>
<p>2010:</p>
<p style="padding-left: 30px;"><a href="/downloads/創新步行輔助機構之設計與應用.pdf">創新步行輔助機構之設計與應用.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Design and Control of a Open-Source, Low Cost, 3D Printed Dynamic Quadruped Robot.pdf">Design and Control of a Open-Source, Low Cost, 3D Printed Dynamic Quadruped Robot.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/四足機器人穩定爬升樓梯步態之軌跡規劃.pdf">四足機器人穩定爬升樓梯步態之軌跡規劃.pdf</a></p>
<p>2011:</p>
<p style="padding-left: 30px;"><a href="/downloads/六足機器人跨越非連續地形之行走策略.pdf">六足機器人跨越非連續地形之行走策略.pdf</a></p>
<p>2013:</p>
<p style="padding-left: 30px;"><a href="/downloads/Self-Adjusting Locomotion on a Partially Broken-down Quadrupedal Biomorphic Robot by Evolutionary Algorithms.pdf">Self-Adjusting Locomotion on a Partially Broken-down Quadrupedal Biomorphic Robot by Evolutionary Algorithms.pdf</a></p>
<p>2014:</p>
<p style="padding-left: 30px;"><a href="/downloads/四足機器人.pdf">四足機器人.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/FINITE ELEMENT ANALYSIS WITHIN COMPONENT DESIGN PROCESS OF HYDRAULIC QUADRUPED ROBOT.pdf">FINITE ELEMENT ANALYSIS WITHIN COMPONENT DESIGN PROCESS OF HYDRAULIC QUADRUPED ROBOT.pdf</a></p>
<p>2016:</p>
<p style="padding-left: 30px;"><a href="/downloads/Trajectory Planning of Quadruped Robot Based on the Principle of Optimal Power.pdf">Trajectory Planning of Quadruped Robot Based on the Principle of Optimal Power.pdf</a></p>
<p>2021:</p>
<p style="padding-left: 30px;"><a href="/downloads/Design and driving model for the quadruped robot An elucidating draft.pdf">Design and driving model for the quadruped robot An elucidating draft.pdf</a></p>
<p>2022:</p>
<p style="padding-left: 30px;"><a href="/downloads/2022_具機械手臂之移動機器人系統整合與物件搬移控制器設計.pdf">2022_具機械手臂之移動機器人系統整合與物件搬移控制器設計.pdf</a></p>
<p>2023 年發表:</p>
<p style="padding-left: 30px;"><a href="/downloads/A Dynamic Approach to Low-Cost Design, Development, and Computational Simulation of a 12DoF Quadruped Robot.pdf">A Dynamic Approach to Low-Cost Design, Development, and Computational Simulation of a 12DoF Quadruped Robot.pdf</a></p>
<p style="padding-left: 30px;"></p><h1>Femap</h1>
<p><a href="https://www.youtube.com/watch?v=0WElObl_l_k">Femap Basics 1: UI Overview - YouTube</a></p>
<p><a href="https://www.youtube.com/watch?v=kPL6cwfvE08&amp;t=4s">Femap Basics 2: Geometry Preparation - YouTube</a></p>
<p><a href="https://www.youtube.com/watch?v=sTM2W0ae9mA&amp;t=7s">Femap Basics 3: Properties, Loads and Boundary Conditions - YouTube</a></p>
<p><a href="https://www.youtube.com/watch?v=bcbwoTj1vik">Introducing Simcenter Femap 2021 - YouTube</a></p>
<p><a href="https://www.youtube.com/watch?v=MziQXNgZFuo">Introduction to running a FEMAP model - YouTube</a></p>
<p><a href="https://www.youtube.com/watch?v=on1Adx-epec">Femap Tutorial 3: Plate Analysis - YouTube</a></p><h1>CoppeliaSim</h1>
<h2>Compile</h2>
<p>編譯 CoppeliaSim 4.1.0 教育版：</p>
<ol>
<li>啟動隨身程式系統 - compile_copsim_for_pj2022.7z (download file size 4 GB, uncompressed file size 14 GB)</li>
<li>y:\tmp&gt;mkdir cop410</li>
<li>y:\tmp\&gt;cd cop410</li>
<li>y:\tmp\cop410&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib.git">https://github.com/CoppeliaRobotics/CoppeliaSimLib.git</a></li>
<li>y:\tmp\cop410&gt;mkdir programming</li>
<li>y:\tmp\cop410&gt;cd programming</li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/coppeliaSimClientApplication.git">https://github.com/CoppeliaRobotics/coppeliaSimClientApplication.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/include.git">https://github.com/CoppeliaRobotics/include.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/common.git">https://github.com/CoppeliaRobotics/common.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/simMath.git">https://github.com/CoppeliaRobotics/simMath.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/libPlugin.git">https://github.com/CoppeliaRobotics/libPlugin.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/simExtAssimp.git">https://github.com/CoppeliaRobotics/simExtAssimp.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/simExtIK.git">https://github.com/CoppeliaRobotics/simExtIK.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/simExtGeom.git">https://github.com/CoppeliaRobotics/simExtGeom.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/simExtRemoteApi.git">https://github.com/CoppeliaRobotics/simExtRemoteApi.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/remoteApiBindings.git">https://github.com/CoppeliaRobotics/remoteApiBindings.git</a></li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/bluezero.git">https://github.com/CoppeliaRobotics/bluezero.git</a> (因為沒有 coppeliasim-v4.1.0 版, 因此使用最新版)</li>
<li>y:\tmp\cop410\programming&gt;git clone --recurse-submodules <a href="https://github.com/CoppeliaRobotics/simExtCodeEditor.git">https://github.com/CoppeliaRobotics/simExtCodeEditor.git</a></li>
</ol>
<p>以上取得的倉儲都是當下最新版本, 因為要編譯 coppeliasim-v4.1.0 版本, 因此以 CoppeliaSimLib 倉儲為例, 必須 checkout coppeliasim-v4.1.0 版本內容:</p>
<ol>
<li>Y:\tmp\cop410&gt;cd CoppeliaSimLib</li>
<li>Y:\tmp\cop410\CoppeliaSimLib&gt;git checkout coppeliasim-v4.1.0</li>
<li>查驗目前倉儲所在的版本號, 可以使用 Y:\tmp\cop410\CoppeliaSimLib&gt;git show</li>
</ol>
<p>其餘 c:\tmp\cop410\programming 目錄下的各倉儲也必須取出對應的 coppeliasim-v4.1.0 版本內容.</p>
<p>執行 CoppeliaSimLib 的編譯, 需要 config.pri 中的相關設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># location of boost headers:
    BOOST_INCLUDEPATH = "Y:/msys64_20210419/mingw64/include/boost"
 
# location of lua headers:
    LUA_INCLUDEPATH = "Y:/lua-5.1.5/src"
 
# lua libraries to link:
    LUA_LIBS = "y:/lua-5.1.5/src/liblua.a"
  
# qscintilla location:
    QSCINTILLA_DIR = "y:/QScintilla_gpl-2.11.2"
 
# qscintilla headers:
    QSCINTILLA_INCLUDEPATH = "$${QSCINTILLA_DIR}/include" "$${QSCINTILLA_DIR}/Qt4Qt5"
  
# qscintilla libraries to link:
    QSCINTILLA_LIBS = "$${QSCINTILLA_DIR}/libqscintilla2_qt5.dll.a"
 
# Make sure if a config.pri is found one level above, that it will be used instead of this one:
    exists(../config.pri) { include(../config.pri) }</pre>
<p>由上列 config.pri 設定檔案可以得知必須要先編譯 lua-5.1.5 與 QScintilla_gpl-2.11.2, 分別取得對應的程式庫之後, 再編譯 CoppeliaSimLib.</p>
<p>設定完成後, 執行 Y:\tmp\cop410\CoppeliaSimLib&gt;qmake -o Makefile coppeliaSimLib.pro</p>
<p>接著執行 Y:\tmp\cop410\CoppeliaSimLib&gt;mingw32-make -f Makefile.Release</p>
<p>編譯結束後, 可以在 Release 目錄中建立 coppeliaSim.dll, 這是 CoppeliaSim 的主要動態連結程式庫.</p>
<p>接著為了執行自行編譯的 CoppeliaSim 4.1.0, 在 Y:\tmp\cop410 中建立 coppeliasim410 目錄, 用來存放編譯完成的檔案, 並且配合 CoppeliaSim 啟動時所需的相關設定內容進行後續的設定.</p>
<p>Y:\tmp\cop410&gt;mkdir coppeliasim410</p>
<p>將前面已經編譯完成的 coppeliaSim.dll 放入 Y:\tmp\cop410\coppeliasim410 目錄中, 接著進入 Y:\tmp\cop410\programming\coppeliaSimClientApplication 目錄, 以下列命令建立 coppeliaSim.exe 執行檔.</p>
<p>而在建立 coppeliaSim.exe 之前, 需要再編輯 coppeliaSim_resource.rc 檔案, 下載 coppeliaSim.ico, 並且開啟 coppeliaSim.pro 中第 42 行 RC_ICONS += coppeliaSim.ico 設定, 以便將 coppeliaSim.ico 圖像編譯後放入 coppeliaSim.exe, coppeliaSim_resource.rc 設定內容如下:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">#include &lt;windows.h&gt;
 
IDI_ICON1   ICON    DISCARDABLE "Y:/tmp/cop410/programming/coppeliaSimClientApplication/coppeliaSim.ico"
 
VS_VERSION_INFO VERSIONINFO
    FILEVERSION 0,0,0,0
    PRODUCTVERSION 0,0,0,0
    FILEFLAGSMASK 0x3fL
#ifdef _DEBUG
    FILEFLAGS VS_FF_DEBUG
#else
    FILEFLAGS 0x0L
#endif
    FILEOS VOS__WINDOWS32
    FILETYPE VFT_DLL
    FILESUBTYPE 0x0L
    BEGIN
        BLOCK "StringFileInfo"
        BEGIN
            BLOCK "040904b0"
            BEGIN
                VALUE "CompanyName", "\0"
                VALUE "FileDescription", "\0"
                VALUE "FileVersion", "0.0.0.0\0"
                VALUE "LegalCopyright", "\0"
                VALUE "OriginalFilename", "coppeliaSim.exe\0"
                VALUE "ProductName", "coppeliaSim\0"
                VALUE "ProductVersion", "0.0.0.0\0"
            END
        END
        BLOCK "VarFileInfo"
        BEGIN
            VALUE "Translation", 0x0409, 1200
        END
    END
/* End of Version info */</pre>
<p>Y:\tmp\cop410\programming\coppeliaSimClientApplication&gt;qmake -o Makefile coppeliaSim.pro</p>
<p>Y:\tmp\cop410\programming\coppeliaSimClientApplication&gt;mingw32-make -f Makefile.Release</p>
<p>編譯完成後可以在 Y:\tmp\cop410\programming\coppeliaSimClientApplication\release 目錄中建立 coppeliaSim.exe 執行檔.</p>
<p>將 coppeliaSim.exe 與 coppeliaSim.dll 放入 Y:\tmp\cop410\coppeliasim410 目錄後, 在可攜系統的命令列中, 執行 Y:\tmp\cop410\coppeliasim410\coppeliaSim 已經可以開啟 coppeliaSim 4.1.0 版, 且首次啟動, coppeliaSim.exe 會自動建立 system 目錄以及其中的 usrset.txt 使用者設定檔案.</p>
<p>接下來必須在 Y:\tmp\cop410\coppeliasim410 目錄加上以下倉儲的內容:</p>
<p><a href="https://github.com/CoppeliaRobotics/scenes.git">https://github.com/CoppeliaRobotics/scenes.git</a></p>
<p><a href="https://github.com/CoppeliaRobotics/models.git">https://github.com/CoppeliaRobotics/models.git</a></p>
<p><a href="https://github.com/CoppeliaRobotics/lua.git">https://github.com/CoppeliaRobotics/lua.git</a></p>
<p><a href="https://github.com/CoppeliaRobotics/helpFiles.git">https://github.com/CoppeliaRobotics/helpFiles.git</a></p>
<p>分別取下各倉儲內容後, 也是必須進行 git checkout coppeliasim-v4.1.0, 簽出與 coppeliaSim.exe 及 coppeliasim.dll 系統對應的版本.</p>
<p>編譯流程到這個階段, 再從命令列中啟動 coppeliaSim.exe 已經可以在看到圖型介面中的 Model browser 區域已經載入 models 目錄中的 .ttm, 但是 default 場景還無法顯示, 因為在 system 系統目錄中, 還需要有 dfltscn.ttt 內定場景檔案 (標示在 <a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib/blob/12e4411ea9b9067d012da43b464e69a7456c2fd8/sourceCode/interfaces/simFlavor.cpp#L203">simFlavor.cpp 檔案中第 203 行</a>), 隨後還需要加入更多的延伸模組程式庫, 所編譯完成的 CoppeliaSim 4.1.0 程式套件, 才能配合接下來的電腦輔助設計實習與協同產品設計實習課程使用.</p>
<p></p><h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a> <a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> <a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a></p>
<p><a href="https://gist.github.com/mdecourse/05930b1775b77293523b59b1bbb43e57">Gist Brython scripts</a></p>
<p><a href="https://mde.tw/cp2021/content/%E8%A7%A3%E9%A1%8C%E7%B7%B4%E7%BF%92.html">解題練習</a></p>
<p><a href="https://mde.tw/cp2021/content/Cango.html">Cango</a></p>
<p>
<script src="/static/brython.js">
</script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- for ggame -->
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<!-- Cango 程式庫 -->
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<!-- for Konva 程式庫 -->
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><button id="add1to100">add 1 to 100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="procflag">PROC flag</button><button id="usaflag">USA flag</button><button id="drawgrid">Draw Grid</button><button id="grid_rect">Random Rect</button><button id="rect_walk">Rect Walk</button><button id="rect_u_walk">Rect U Walk</button><button id="rect_rev_u_walk">Rect rev U Walk</button><button id="sgcr">單節貪食蛇</button><button id="cfrr">5 個紅點方塊</button><button id="snake">Snake</button><button id="bsnake">BSnake</button><button id="auto_guess">auto_guess</button><button id="ball">ball</button><button id="bezier">bezier</button><button id="big_lotto">big_lotto</button><button id="brython_kw">brython_kw</button><button id="bunny">bunny</button><button id="cango_spur">cango_spur</button><button id="cango_spur1">cango_spur1</button><button id="cango_three_gears">cango_three_gears</button><button id="clear">clear</button><button id="clock">clock</button><button id="convert_temp">convert_temp</button><button id="deepmerge">deepmerge</button><button id="display_stl">display_stl</button><button id="draw">draw</button><button id="ex1">ex1</button><button id="ex2">ex2</button><button id="ex3">ex3</button><button id="ex4">ex4</button><button id="fibo">fibo</button><button id="fourbar">fourbar</button><button id="guess_a_number">guess_a_number</button><button id="hw1_1">hw1_1</button><button id="hw1_2">hw1_2</button><button id="keycode">Keycode</button><button id="knova1">knova1</button><button id="merge3">merge3</button><button id="power_lotto">power_lotto</button><button id="spur">spur</button><button id="spur_w_form">spur_w_form</button><button id="stl_binary_ascii">stl_binary_ascii</button><button id="stl_writer">stl_writer</button><button id="tetris">Tetris</button><button id="turtle1">turtle1</button><button id="turtle2">turtle2</button><button id="turtle3">turtle3</button><button id="turtle4">turtle4</button><button id="turtle5">turtle5</button><button id="turtle6">turtle6</button><button id="turtle7">turtle7</button><button id="turtle8">turtle8</button><button id="twl_link_ik">twl_link_ik</button><button id="webcam">webcam</button><button id="websocket">websocket</button><button id="ycqsort">ycqsort</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<p><!-- 這裡的畫布 id 為 brython_div --></p>
<div id="brython_div"></div>
<!-- graphics-column is for ggame -->
<div class="col-md-0" height="1" id="graphics-column" width="1"></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<p><!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/03dd57e75b6b5be2b3d64c4fd15758e80cb9bf36/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## procflag start
procflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/03dd57e75b6b5be2b3d64c4fd15758e80cb9bf36/proc_flag.py"
procflag = button2(procflag_url)
doc["procflag"].bind("click", procflag.do)
################################## rocflag end
################################## drawgrid start
drawgrid_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/070f424f2e9a99617009af216762163f66628e6d/draw_grid.py"
drawgrid = button2(drawgrid_url)
doc["drawgrid"].bind("click", drawgrid.do)
################################## drawgrid end
################################## grid_rect start
grid_rect_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/f3683ed24646f63625b616e9cb8e61a9a08ae9be/draw_grid_random_rect.py"
grid_rect = button2(grid_rect_url)
doc["grid_rect"].bind("click", grid_rect.do)
################################## grid_rect end
################################## rect_walk start
rect_walk_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/fdf9749488a59f00c2398aede8b6cbe8c0ed5d81/rect_walk.py"
rect_walk = button2(rect_walk_url)
doc["rect_walk"].bind("click", rect_walk.do)
################################## rect_walk end
################################## rect_walk start
rect_u_walk_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/63645d3f5823fd22bdb02e840e46e551afee4087/rect_u_walk.py"
rect_u_walk = button2(rect_u_walk_url)
doc["rect_u_walk"].bind("click", rect_u_walk.do)
################################## rect_walk end
################################## rect_rev_u_walk start
rect_rev_u_walk_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/165e7792091d4b91b9923592242bfaf28258a719/rect_rev_u_walk.py"
rect_rev_u_walk = button2(rect_rev_u_walk_url)
doc["rect_rev_u_walk"].bind("click", rect_rev_u_walk.do)
################################## rect_rev_u_walk end
################################## single green chasing red start
sgcr_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/9f7c1cda3a51b061cde00d104054fb3ce19ffd1a/single_green_chasing_red.py"
sgcr = button2(sgcr_url)
doc["sgcr"].bind("click", sgcr.do)
################################## single green chasing red end
################################## chasing 5 red rect start
# execute only one time
#cfrr_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/c43844d62a0bd7eb6617d5222ba93b5de033a63f/chasing_5_red_rect.py"
# continuously execution
cfrr_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/7e0563617649a2532ed0fc903858e135cbcedcd0/chasing_5_red_rect.py"
cfrr = button2(cfrr_url)
doc["cfrr"].bind("click", cfrr.do)
################################## chasing 5 red rect end
################################## usaflag start
usaflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/144b62fa07987d5ab6f369ae3661c645405e1872/usaflag.py"
usaflag = button2(usaflag_url)
doc["usaflag"].bind("click", usaflag.do)
################################## usaflag end
################################## snake start
snake_url = "https://gist.githubusercontent.com/mdecourse/d55158478f4f8fcbfedd455f8be8c7b6/raw/f29309745a98687ed5c41cf90d28ef25a1e48dd4/snake_brython_div.py"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecourse/2a8f213b6858a40481d17556c8a2fe86/raw/0a4a824493865dc7cf56977d03c9438d002b4268/kmlo_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## auto_guess start
auto_guess_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/auto_guess.py"
auto_guess = button2(auto_guess_url)
doc["auto_guess"].bind("click", auto_guess.do)
################################## auto_guess end
################################## ball start
ball_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ball.py"
ball = button2(ball_url)
doc["ball"].bind("click", ball.do)
################################## ball end
################################## bezier start
bezier_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/79794cbd97d0846e2c9df14d54118d5e00a97a22/bezier.py"
bezier = button2(bezier_url)
doc["bezier"].bind("click", bezier.do)
################################## bezier end
################################## big_lotto start
big_lotto_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/big_lotto.py"
big_lotto = button2(big_lotto_url)
doc["big_lotto"].bind("click", big_lotto.do)
################################## big_lotto end
################################## brython_kw start
brython_kw_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/brython_kw.py"
brython_kw = button2(brython_kw_url)
doc["brython_kw"].bind("click", brython_kw.do)
################################## brython_kw end
################################## bunny start
bunny_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/bunny.py"
bunny = button2(bunny_url)
doc["bunny"].bind("click", bunny.do)
################################## bunny end
################################## cango_spur start
cango_spur_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/cango_spur.py"
cango_spur = button2(cango_spur_url)
doc["cango_spur"].bind("click", cango_spur.do)
################################## cango_spur end
################################## cango_spur1 start
cango_spur1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/cango_spur1.py"
cango_spur1 = button2(cango_spur1_url)
doc["cango_spur1"].bind("click", cango_spur1.do)
################################## cango_spur1 end
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/cango_three_gears.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## clear start
clear_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/clear.py"
clear = button2(clear_url)
doc["clear"].bind("click", clear.do)
################################## clear end
################################## clock start
clock_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/clock.py"
clock = button2(clock_url)
doc["clock"].bind("click", clock.do)
################################## clock end
################################## convert_temp start
convert_temp_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/convert_temp.py"
convert_temp = button2(convert_temp_url)
doc["convert_temp"].bind("click", convert_temp.do)
################################## convert_temp end
################################## display_stl start
display_stl_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/display_stl.py"
display_stl = button2(display_stl_url)
doc["display_stl"].bind("click", display_stl.do)
################################## display_stl end
################################## draw start
draw_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/draw.py"
draw = button2(draw_url)
doc["draw"].bind("click", draw.do)
################################## draw end
################################## ex1 start
ex1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ex1.py"
ex1 = button2(ex1_url)
doc["ex1"].bind("click", ex1.do)
################################## ex1 end
################################## ex2 start
ex2_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ex2.py"
ex2 = button2(ex2_url)
doc["ex2"].bind("click", ex2.do)
################################## ex2 end
################################## ex3 start
ex3_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ex3.py"
ex3 = button2(ex3_url)
doc["ex3"].bind("click", ex3.do)
################################## ex3 end
################################## ex4 start
ex4_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ex4.py"
ex4 = button2(ex4_url)
doc["ex4"].bind("click", ex4.do)
################################## ex4 end
################################## fourbar start
fourbar_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/fa232853da824f6dd5ae1f61a96543e6106c04b5/fourbar.py"
fourbar = button2(fourbar_url)
doc["fourbar"].bind("click", fourbar.do)
################################## fourbar end
################################## guess_a_number start
guess_a_number_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/guess_a_number.py"
guess_a_number = button2(guess_a_number_url)
doc["guess_a_number"].bind("click", guess_a_number.do)
################################## guess_a_number end
################################## hw1_1 start
hw1_1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/hw1-1.py"
hw1_1 = button2(hw1_1_url)
doc["hw1_1"].bind("click", hw1_1.do)
################################## hw1_1 end
################################## hw1_2 start
hw1_2_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/hw1-2.py"
hw1_2 = button2(hw1_2_url)
doc["hw1_2"].bind("click", hw1_2.do)
################################## hw1-2 end
################################## knova1 start
knova1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/konva1.py"
knova1 = button2(knova1_url)
doc["knova1"].bind("click", knova1.do)
################################## knova1 end
################################## power_lotto start
power_lotto_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/power_lotto.py"
power_lotto = button2(power_lotto_url)
doc["power_lotto"].bind("click", power_lotto.do)
################################## power_lotto end
################################## spur start
spur_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/e6d0cc9302f7b43bd36321d69c2433bec2cbcfd4/spur.py"
spur = button2(spur_url)
doc["spur"].bind("click", spur.do)
################################## spur end
################################## spur_w_form start
spur_w_form_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/e6d0cc9302f7b43bd36321d69c2433bec2cbcfd4/spur_w_form.py"
spur_w_form = button2(spur_w_form_url)
doc["spur_w_form"].bind("click", spur_w_form.do)
################################## spur_w_form end
################################## stl_binary_ascii start
stl_binary_ascii_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/stl_binary_ascii.py"
stl_binary_ascii = button2(stl_binary_ascii_url)
doc["stl_binary_ascii"].bind("click", stl_binary_ascii.do)
################################## stl_binary_ascii end
################################## stl_writer start
stl_writer_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/stl_writer.py"
stl_writer = button2(stl_writer_url)
doc["stl_writer"].bind("click", stl_writer.do)
################################## stl_writer end
################################## turtle1 start
turtle1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle1.py"
turtle1 = button2(turtle1_url)
doc["turtle1"].bind("click", turtle1.do)
################################## turtle1 end
################################## turtle2 start
turtle2_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle2.py"
turtle2 = button2(turtle2_url)
doc["turtle2"].bind("click", turtle2.do)
################################## turtle2 end
################################## turtle3 start
turtle3_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle3.py"
turtle3 = button2(turtle3_url)
doc["turtle3"].bind("click", turtle3.do)
################################## turtle3 end
################################## turtle4 start
turtle4_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle4.py"
turtle4 = button2(turtle4_url)
doc["turtle4"].bind("click", turtle4.do)
################################## turtle4 end
################################## turtle5 start
turtle5_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle5.py"
turtle5 = button2(turtle5_url)
doc["turtle5"].bind("click", turtle5.do)
################################## turtle5 end
################################## turtle6 start
turtle6_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle6.py"
turtle6 = button2(turtle6_url)
doc["turtle6"].bind("click", turtle6.do)
################################## turtle6 end
################################## turtle7 start
turtle7_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle7.py"
turtle7 = button2(turtle7_url)
doc["turtle7"].bind("click", turtle7.do)
################################## turtle7 end
################################## turtle8 start
turtle8_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle8.py"
turtle8 = button2(turtle8_url)
doc["turtle8"].bind("click", turtle8.do)
################################## turtle8 end
################################## twl_link_ik start
twl_link_ik_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/twl_link_ik.py"
twl_link_ik = button2(twl_link_ik_url)
doc["twl_link_ik"].bind("click", twl_link_ik.do)
################################## twl_link_ik end
################################## webcam start
webcam_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/webcam.py"
webcam = button2(webcam_url)
doc["webcam"].bind("click", webcam.do)
################################## webcam end
################################## ycqsort start
ycqsort_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ycqsort.py"
ycqsort = button2(ycqsort_url)
doc["ycqsort"].bind("click", ycqsort.do)
################################## ycqsort end
################################## fibo start
fibo_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/fa232853da824f6dd5ae1f61a96543e6106c04b5/fibo_ex.py"
fibo = button2(fibo_url)
doc["fibo"].bind("click", fibo.do)
################################## fibo end
################################## deepmerge start
deepmerge_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/e89e0f978a015bf9361270a389a5b84e6244ed5b/deepmerge.py"
deepmerge = button2(deepmerge_url)
doc["deepmerge"].bind("click", deepmerge.do)
################################## deepmerge end
################################## merge3 start
merge3_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/8a7452a451e57e4de720f22fc2fc8abd6aac0bc8/merge3.py"
merge3 = button2(merge3_url)
doc["merge3"].bind("click", merge3.do)
################################## merge3 end
################################## websocket start
websocket_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/86dda666271974d6c520086700db14a2124f0ae8/websocket.py"
websocket = button2(websocket_url)
doc["websocket"].bind("click", websocket.do)
################################## websocket end
################################## keycode start
keycode_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/ba159101705aaf8ba182a442b455425a48a85610/keycode.py"
keycode = button2(keycode_url)
doc["keycode"].bind("click", keycode.do)
################################## keycode end
################################## tetris start
tetris_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/738223b424c3f5f12961070aa8a75185177420b6/pygame_to_brython_tetris.py"
tetris = button2(tetris_url)
doc["tetris"].bind("click", tetris.do)
################################## tetris end
</script>
</p>